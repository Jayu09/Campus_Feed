{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport JWT from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport { rootSaga } from \"../sagas\";\nvar token = localStorage.getItem(\"token\");\naxios.defaults.headers.common[\"Authorization\"] = token;\nvar sagaMiddleware = createSagaMiddleware();\nvar initialState = {\n  users: {\n    token: token,\n    valid: token ? true : false,\n    id: token ? JWT.decode(token).sub : null\n  }\n};\nvar store = createStore(reducer, initialState, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/jayu/Desktop/my-project/my_campus/frontend/src/store/index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","reducer","JWT","axios","rootSaga","token","localStorage","getItem","defaults","headers","common","sagaMiddleware","initialState","users","valid","id","decode","sub","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAJ,KAAK,CAACK,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDL,KAAjD;AACA,IAAMM,cAAc,GAAGX,oBAAoB,EAA3C;AACA,IAAMY,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACLR,IAAAA,KAAK,EAAEA,KADF;AAELS,IAAAA,KAAK,EAAET,KAAK,GAAG,IAAH,GAAU,KAFjB;AAGLU,IAAAA,EAAE,EAAEV,KAAK,GAAGH,GAAG,CAACc,MAAJ,CAAWX,KAAX,EAAkBY,GAArB,GAA2B;AAH/B;AADY,CAArB;AAOA,IAAMC,KAAK,GAAGpB,WAAW,CACvBG,OADuB,EAEvBW,YAFuB,EAGvBb,eAAe,CAACY,cAAD,CAHQ,CAAzB;AAMAA,cAAc,CAACQ,GAAf,CAAmBf,QAAnB;AAEA,eAAec,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport JWT from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport { rootSaga } from \"../sagas\";\nconst token = localStorage.getItem(\"token\");\naxios.defaults.headers.common[\"Authorization\"] = token;\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = {\n  users: {\n    token: token,\n    valid: token ? true : false,\n    id: token ? JWT.decode(token).sub : null\n  }\n};\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}