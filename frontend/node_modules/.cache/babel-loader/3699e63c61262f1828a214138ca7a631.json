{"ast":null,"code":"import _regeneratorRuntime from \"/home/jayu/Desktop/my-project/my_campus/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jayu/Desktop/my-project/my_campus/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar postUrl = \"api/posts/\";\nexport function getPosts() {\n  return _getPosts.apply(this, arguments);\n}\n\nfunction _getPosts() {\n  _getPosts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(postUrl);\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPosts.apply(this, arguments);\n}\n\nexport function addPosts(_x) {\n  return _addPosts.apply(this, arguments);\n}\n\nfunction _addPosts() {\n  _addPosts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(data) {\n    var post, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            post = data.payload;\n            _context2.next = 3;\n            return axios.post(postUrl, post, {\n              onUploadProgress: function onUploadProgress(ProgressEvent) {\n                alert(\"image uploading\" + Math.round(ProgressEvent.loaded / ProgressEvent.total * 100));\n              }\n            });\n\n          case 3:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _addPosts.apply(this, arguments);\n}\n\nexport function editPost(_x2) {\n  return _editPost.apply(this, arguments);\n}\n\nfunction _editPost() {\n  _editPost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(data) {\n    var post, res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            post = data.payload;\n            _context3.next = 3;\n            return axios.put(postUrl, post);\n\n          case 3:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res.data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _editPost.apply(this, arguments);\n}\n\nexport function remove(_x3) {\n  return _remove.apply(this, arguments);\n}\n\nfunction _remove() {\n  _remove = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(data) {\n    var payload, token, res;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            payload = data.id;\n            token = localStorage.getItem(\"token\");\n            _context4.next = 4;\n            return axios.post(postUrl + \"delete\", {\n              payload: payload,\n              token: token\n            });\n\n          case 4:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res.data);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _remove.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/jayu/Desktop/my-project/my_campus/frontend/src/api/apiPosts.js"],"names":["axios","postUrl","getPosts","get","res","data","addPosts","post","payload","onUploadProgress","ProgressEvent","alert","Math","round","loaded","total","editPost","put","remove","id","token","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAG,YAAhB;AAEA,gBAAsBC,QAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACYF,KAAK,CAACG,GAAN,CAAUF,OAAV,CADZ;;AAAA;AACAG,YAAAA,GADA;AAAA,6CAECA,GAAG,CAACC,IAFL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBC,QAAtB;AAAA;AAAA;;;;;2BAAO,kBAAwBD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACAE,YAAAA,IADA,GACOF,IAAI,CAACG,OADZ;AAAA;AAAA,mBAEYR,KAAK,CAACO,IAAN,CAAWN,OAAX,EAAoBM,IAApB,EAA0B;AAC3CE,cAAAA,gBAAgB,EAAE,0BAAAC,aAAa,EAAI;AAClCC,gBAAAA,KAAK,CACJ,oBACCC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACK,KAAtC,GAA+C,GAA1D,CAFG,CAAL;AAIA;AAN0C,aAA1B,CAFZ;;AAAA;AAEAX,YAAAA,GAFA;AAAA,8CAUCA,GAAG,CAACC,IAVL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaP,gBAAsBW,QAAtB;AAAA;AAAA;;;;;2BAAO,kBAAwBX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACAE,YAAAA,IADA,GACOF,IAAI,CAACG,OADZ;AAAA;AAAA,mBAEYR,KAAK,CAACiB,GAAN,CAAUhB,OAAV,EAAmBM,IAAnB,CAFZ;;AAAA;AAEAH,YAAAA,GAFA;AAAA,8CAGCA,GAAG,CAACC,IAHL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,gBAAsBa,MAAtB;AAAA;AAAA;;;;;2BAAO,kBAAsBb,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACAG,YAAAA,OADA,GACUH,IAAI,CAACc,EADf;AAEAC,YAAAA,KAFA,GAEQC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFR;AAAA;AAAA,mBAGYtB,KAAK,CAACO,IAAN,CAAWN,OAAO,GAAG,QAArB,EAA+B;AAAEO,cAAAA,OAAO,EAAPA,OAAF;AAAWY,cAAAA,KAAK,EAALA;AAAX,aAA/B,CAHZ;;AAAA;AAGAhB,YAAAA,GAHA;AAAA,8CAICA,GAAG,CAACC,IAJL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\";\nconst postUrl = \"api/posts/\";\n\nexport async function getPosts() {\n\tconst res = await axios.get(postUrl);\n\treturn res.data;\n}\n\nexport async function addPosts(data) {\n\tconst post = data.payload;\n\tconst res = await axios.post(postUrl, post, {\n\t\tonUploadProgress: ProgressEvent => {\n\t\t\talert(\n\t\t\t\t\"image uploading\" +\n\t\t\t\t\tMath.round((ProgressEvent.loaded / ProgressEvent.total) * 100)\n\t\t\t);\n\t\t}\n\t});\n\treturn res.data;\n}\n\nexport async function editPost(data) {\n\tconst post = data.payload;\n\tconst res = await axios.put(postUrl, post);\n\treturn res.data;\n}\n\nexport async function remove(data) {\n\tconst payload = data.id;\n\tconst token = localStorage.getItem(\"token\");\n\tconst res = await axios.post(postUrl + \"delete\", { payload, token });\n\treturn res.data;\n}\n"]},"metadata":{},"sourceType":"module"}